plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    assertJVersion = "3.23.1",
    slf4jVersion = "1.7.32"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

compileTestJava {
    options.encoding('UTF-8')
}

compileJava {
    options.encoding('UTF-8')
}

dependencies {
    testImplementation(
            'org.junit.jupiter:junit-jupiter:5.8.1',
            'io.rest-assured:rest-assured:5.3.0',
            'org.projectlombok:lombok:1.18.22',
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            'com.codeborne:selenide:6.12.4',
            "io.qameta.allure:allure-selenide:$allureVersion",
    )
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testCompileOnly "org.projectlombok:lombok:1.18.26"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.26"
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}